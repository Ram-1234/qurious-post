datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  email    String   @unique
  username String   @unique
  password String
  avatar   String?
  posts    Post[]
  createAt DateTime @default(now())
  //likes Like[]
  //comments Comment[]

  // role      Role @default(BASIC)
  // preferences Json?
  // @@unique([username,email])
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  story     String
  authorId    String   @db.ObjectId
  author      User     @relation(fields: [authorId], references: [id])
  theme     String?
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
  comments Comment[]
  likes Like[]

 
  // subtitle String?
  // categories Category[]
}

// model Category {
//   id      String @id @default(auto()) @map("_id") @db.ObjectId
//   posts Post @relation(fields:[postId], references: [id])
//   postId String @db.ObjectId
// }

model Comment{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  message String? 
  // author    User?    @relation(fields: [authorId], references: [id])
  // authorId  String   @db.ObjectId
  post   Post? @relation(fields: [postId], references: [id])  
  postId String? @db.ObjectId
}

model Like{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  // author    User?    @relation(fields: [authorId], references: [id])
  // authorId  String   @db.ObjectId
  post   Post? @relation(fields: [postId], references: [id])  
  postId String? @db.ObjectId
  like Boolean?
}

model Tag {
  name String @id @map("_id")
}


enum Role {
  BASIC
  ADMIN
}
